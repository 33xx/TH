iqthon.iq_cmd(
    pattern="ุงุทูุงุก ุชููุซูู$",
    command=("ุงุทูุงุก ุชููุซูู", plugin_category),
    info={
        "header": "โฐ๏ธ ุฅููุงู ุงูุชุดุบููู โ",
        "description": "โฐ๏ธูุฅูููุงู ุงูุฏุงูููู ูููููุน ููุฑูฺชูุ ุนูุฏูุง ูุงููฺชูู ุงูุชุดุบููู ูู ุงูุจูุช ูุจุฐูู ุนููู ุงูุฐููุงุจ ูููููุน ููุฑูฺชู ูุชุดุบูููู ๐ก",
        "usage": "{tr}ุงุทูุงุก ุชููุซูู",
    },
)


async def _(event):
    "โฐ๏ธ ุฅููุงู ุงูุชุดุบููู โ"
    if BOTLOG:
        await event.client.send_message(
            BOTLOG_CHATID,
            "**โ๏ธ ุฅููุงู ุงูุชุดุบููู โ **\n" "**โ๏ธ ุชูู ุฅูููุงู ุชุดุบููู ุงูุจููุช ุจูุฌูุงุญ โ**",
        )
    await edit_or_reply(
        event,
        "**โฐ๏ธุฌูุงุฑู ุฅูููุงู ุชุดุบููู ุงูุจููุช ุงูุขู ..**\n **ุฃุนูุฏ ุชุดุบูููู ูุฏูููุงู ูุงุญููุงู ุนูุจุฑ ูููุฑูฺชู ..**\n**ุณูุจูู ุงูุจููุช ูุชููููุงู ุนู ุงูุนููู ูุบุงููุฉ** \n**ุงููููุช ุงููุฐฺชููุฑ ๐ก**",
    )
    if HEROKU_APP is not None:
        HEROKU_APP.process_formation()["worker"].scale(0)
    else:
        sys.exit(0)


@iqthon.iq_cmd(
    pattern="ุงุทูุงุก ูุคูุช( [0-9]+)?$",
    command=("ุงุทูุงุก ูุคูุช", plugin_category),
    info={
        "header": "Userbot will stop working for the mentioned time.",
        "usage": "{tr}sleep <seconds>",
        "examples": "{tr}sleep 60",
    },
)
async def _(event):
    "To sleep the userbot"
    if " " not in event.pattern_match.group(1):
        return await edit_or_reply(event, "โฐ๏ธุจููุงุก ุงูุฌูููุฉ โ : `.ุงุทูุงุก ูุคูุช + ุงูููุช`")
    counter = int(event.pattern_match.group(1))
    if BOTLOG:
        await event.client.send_message(
            BOTLOG_CHATID,
            "**โฐ๏ธ ุชูู ูุถูุน ุงูุจููุช ูู ูุถูุน ุงูุณฺชูู ูู : ** "
            + str(counter)
            + " **โ๏ธุนูุฏุฏ ุงูุซูุงููู โฑ**",
        )
    event = await edit_or_reply(
        event, f"`โ๏ธ ุญุณููุงูุ ุณุฃุฏุฎูู ูุถูุน ุงูุณฺชูู ูู : {counter} ** ุนูุฏุฏ ุงูุซูุงููู โฑ** "
    )
    sleep(counter)
    await event.edit("**โฐ๏ธุญุณููุงูุ ุฃููุง ูุดูุท ุงูุขู แฏค **")
